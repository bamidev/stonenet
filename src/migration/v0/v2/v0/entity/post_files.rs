//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.15

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "post_files")]
pub struct Model {
	#[sea_orm(primary_key, auto_increment = false)]
	pub object_id: i64,
	pub hash: String,
	pub sequence: i32,
}

#[derive(Copy, Clone, Debug, DeriveRelation, EnumIter)]
pub enum Relation {
	#[sea_orm(
		belongs_to = "crate::entity::object::Entity",
		from = "Column::ObjectId",
		to = "crate::entity::object::Column::Id",
		on_update = "NoAction",
		on_delete = "NoAction"
	)]
	Object,
}

impl Related<crate::entity::object::Entity> for Entity {
	fn to() -> RelationDef { Relation::Object.def() }
}

impl ActiveModelBehavior for ActiveModel {}
