//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.15

use sea_orm::entity::prelude::*;

use crate::common::IdType;


#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "file")]
pub struct Model {
	#[sea_orm(primary_key, auto_increment = true)]
	pub id: i64,
	#[sea_orm(unique)]
	pub hash: IdType,
	pub compression_type: u8,
	pub mime_type: String,
	pub block_count: u32,
	pub plain_hash: IdType,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
	#[sea_orm(has_many = "super::file_block::Entity")]
	FileBlock,
}

impl Related<super::file_block::Entity> for Entity {
	fn to() -> RelationDef { Relation::FileBlock.def() }
}

impl ActiveModelBehavior for ActiveModel {}
