//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.15

use sea_orm::entity::prelude::*;

use crate::{common::IdType, core::ActorAddress};

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "identity")]
pub struct Model {
	#[sea_orm(primary_key, auto_increment = true)]
	pub id: i64,
	#[sea_orm(unique)]
	pub address: ActorAddress,
	pub public_key: Vec<u8>,
	pub first_object: IdType,
	pub r#type: String,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
	#[sea_orm(has_many = "super::object::Entity")]
	Object,
}

impl Related<super::object::Entity> for Entity {
	fn to() -> RelationDef { Relation::Object.def() }
}

impl ActiveModelBehavior for ActiveModel {}
